/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms.Categorias;

import Clases.BD;
import Clases.CRUD;
import Clases.Colores;
import Clases.Strings;
import Clases.Vista;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jandr
 */
public class Registrar_Categoria extends javax.swing.JPanel {

    /**
     * Creates new form Registrar_Categoria
     */
    public Registrar_Categoria() {
        initComponents();
        diseñar_form();
    }

    private void diseñar_form() {
        this.setBackground(Colores.texto_botones_clicked);
        this.lblHelp.setText(Strings.ayuda_categoria);
        this.txtDescripcion.setLineWrap(true);
        this.pnlContenedor.setBackground(Colores.fondo_primario);
        this.lblLoader.setVisible(false);
        this.btnAgregar.setBackground(Colores.texto_botones_clicked);
        this.btnAgregar.setOpaque(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlContenedor = new javax.swing.JPanel();
        lblHelp = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCategoria = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        lblLoader = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JLabel();

        pnlContenedor.setForeground(new java.awt.Color(146, 187, 235));

        lblHelp.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        lblHelp.setForeground(new java.awt.Color(1, 1, 1));
        lblHelp.setText("rc");

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(1, 1, 1));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Categoria:");

        jLabel2.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(1, 1, 1));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Descripción:");

        txtCategoria.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtCategoria.setForeground(new java.awt.Color(1, 1, 1));
        txtCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCategoriaKeyTyped(evt);
            }
        });

        txtDescripcion.setColumns(20);
        txtDescripcion.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtDescripcion.setForeground(new java.awt.Color(1, 1, 1));
        txtDescripcion.setRows(6);
        txtDescripcion.setAutoscrolls(false);
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtDescripcion);

        lblLoader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/loader.gif"))); // NOI18N

        btnAgregar.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(1, 1, 1));
        btnAgregar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAgregar.setText("Registrar Categoria");
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAgregarMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAgregarMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout pnlContenedorLayout = new javax.swing.GroupLayout(pnlContenedor);
        pnlContenedor.setLayout(pnlContenedorLayout);
        pnlContenedorLayout.setHorizontalGroup(
            pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContenedorLayout.createSequentialGroup()
                .addGroup(pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlContenedorLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlContenedorLayout.createSequentialGroup()
                                .addGroup(pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(42, 42, 42)
                                .addGroup(pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCategoria)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)))
                            .addComponent(lblHelp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlContenedorLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblLoader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))))
                .addGap(30, 30, 30))
        );
        pnlContenedorLayout.setVerticalGroup(
            pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContenedorLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblHelp)
                .addGap(80, 80, 80)
                .addGroup(pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1))
                .addGap(25, 25, 25)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblLoader, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(pnlContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseEntered
        // TODO add your handling code here:
        btnAgregar.setBackground(Colores.fondo_primario_oscuro);
        btnAgregar.setForeground(Colores.texto_botones_clicked);
    }//GEN-LAST:event_btnAgregarMouseEntered

    private void btnAgregarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseExited
        // TODO add your handling code here:
        btnAgregar.setBackground(Colores.texto_botones_clicked);
        btnAgregar.setForeground(Colores.texto_botones);
    }//GEN-LAST:event_btnAgregarMouseExited

    private void btnAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseClicked
        // TODO add your handling code here:
        new agregar_categoria().show();
    }//GEN-LAST:event_btnAgregarMouseClicked

    private void txtCategoriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCategoriaKeyTyped
        // TODO add your handling code here:
        if (txtCategoria.getText() != null && !txtCategoria.getText().equals("")) {
            txtCategoria.setText(txtCategoria.getText().toUpperCase());   
        }
    }//GEN-LAST:event_txtCategoriaKeyTyped

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
        // TODO add your handling code here:
        if (txtDescripcion.getText() != null && !txtDescripcion.getText().equals("")) {
            txtDescripcion.setText(txtDescripcion.getText().toUpperCase());   
        }
    }//GEN-LAST:event_txtDescripcionKeyTyped

    public void mostrar_loading(boolean mostrar) {
        btnAgregar.setVisible(!mostrar);
        lblLoader.setVisible(mostrar);
    }

    public class agregar_categoria implements Runnable {

        public void show() {
            new Thread(this).start();
        }

        @Override
        public void run() {
            mostrar_loading(true);
            try {
                if (CRUD.conexion_internet()) {
                    if (!txtCategoria.getText().equals("")) {
                        if (!txtDescripcion.getText().equals("")) {
                            if (!CRUD.existe_categoria(txtCategoria.getText())) {
                                if (CRUD.insertar_categoria(txtCategoria.getText(), txtDescripcion.getText()) != 0) {
                                    mostrar_loading(false);
                                    Vista.mensaje_informacion(Strings.categoria_agregada, Strings.ventana_informacion_titulo);
                                    clear_text();
                                } else {
                                    mostrar_loading(false);
                                    Vista.mensaje_error(Strings.error_desconocido, Strings.titulo_error_vendedor);
                                }
                            } else {
                                mostrar_loading(false);
                                Vista.mensaje_error(Strings.categoria_existente, Strings.titulo_error_vendedor);
                                clear_text();
                            }
                        } else {
                            mostrar_loading(false);
                            Vista.mensaje_error(Strings.ingrese_descripcion, Strings.campos_vacios);
                        }
                    } else {
                        mostrar_loading(false);
                        Vista.mensaje_error(Strings.ingrese_categoria, Strings.campos_vacios);
                    }
                } else {
                    mostrar_loading(false);
                    Vista.mensaje_error(Strings.sin_internet, Strings.titulo_sin_internet);
                }
            } catch (InterruptedException | IOException | SQLException | ClassNotFoundException ex) {
                mostrar_loading(false);
                Logger.getLogger(Registrar_Categoria.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void clear_text() {
        txtCategoria.setText("");
        txtDescripcion.setText("");
        txtCategoria.requestFocus();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAgregar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHelp;
    private javax.swing.JLabel lblLoader;
    private javax.swing.JPanel pnlContenedor;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextArea txtDescripcion;
    // End of variables declaration//GEN-END:variables
}
